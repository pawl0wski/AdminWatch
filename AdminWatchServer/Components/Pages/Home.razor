@page "/"
@using AdminWatchServer.Services
@using AdminWatchServer.Services.Auth
@rendermode InteractiveServer

@inject IAuthService AuthService;
@inject IDialogService DialogService;
@inject NavigationManager Navigator;

<PageTitle>AdminWatch</PageTitle>

<FluentStack 
    Style="width: 100vw; height: 100vh"
    Orientation="Orientation.Vertical"
    HorizontalAlignment="HorizontalAlignment.Center"
    VerticalAlignment="VerticalAlignment.Center">
    <FluentProgressRing />
    <FluentLabel>Ładowanie...</FluentLabel>
</FluentStack>


@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        if (AuthService.IsNoAccounts())
        {
            await ShowCreateFirstAccountDialog();
            return;
        }

        if (await AuthService.IsLoggedIn())
            OpenDashboard();
        else
            OpenLoginPage();
    }

    private async Task ShowCreateFirstAccountDialog()
    {
        var dialog = await DialogService.ShowInfoAsync(
            "Aby skorzystać z aplikacji AdminWatch musisz stworzyć konto Super Administratora.",
            "Brak konta Super Administratora");
        
        await dialog.Result;
        Navigator.NavigateTo("/register");
    }
    
    private void OpenDashboard()
    {
        Navigator.NavigateTo("/dashboard");
    }
    
    private void OpenLoginPage()
    {
        Navigator.NavigateTo("/login");
    }
}
